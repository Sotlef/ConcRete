#import VCToolsInstallDir
#import VSCMD_ARG_HOST_ARCH
#import VSCMD_ARG_TGT_ARCH

#import PATH

.VSBinPath       = '$VCToolsInstallDir$\bin\Host$VSCMD_ARG_HOST_ARCH$\$VSCMD_ARG_TGT_ARCH$\'
.PlatformToolset = 'v141'

Compiler( 'MSVC' )
{
  .Executable = '$VSBinPath$/cl.exe'
  .CompilerFamily = 'msvc'
  .ExtraFiles = { '$VSBinPath$/c1.dll'
                  '$VSBinPath$/c1xx.dll',
                  '$VSBinPath$/c2.dll',
                  '$VSBinPath$/msobj140.dll'
                  '$VSBinPath$/mspdb140.dll'
                  '$VSBinPath$/mspdbcore.dll'
                  '$VSBinPath$/mspdbsrv.exe'
                  '$VSBinPath$/mspft140.dll'
                  '$VSBinPath$/msvcp140.dll'
                  '$VSBinPath$/vcruntime140.dll'
                  '$VSBinPath$/1033/clui.dll'
                }
}

.Compiler           = 'MSVC'
.CompilerOptions    = '"%1"'           // Input
                    + ' /Fo"%2"'       // Output
                    + ' /Z7'           // Debug format (in .obj)
                    + ' /c'            // Compile only
                    + ' /nologo'       // No compiler spam
                    + ' /W3'           // Warning level 3
                    + ' /WX-'          // Warnings NOT as errors
                    + ' /EHsc'         // Exception handling model
                    + ' /std:c++17'    // C++17
.CompilerOptionsDebug = ' /sdl-'
                      + ' /Od'
                      + ' /MDd'
                      + ' /D"_DEBUG"'
.CompilerOptionsRelease = ' /O2'
                        + ' /Oi'
                        + ' /MD'
                        + ' /D"NDEBUG"'
                        + ' /Gy'
.Librarian         = '$VSBinPath$\link.exe'
.LibrarianOptions  = '"%1"'            // Input
                   + ' /DLL'           // DLL
                   + ' /IMPLIB:"%2"'   // Output
.Linker             = '$VSBinPath$\link.exe'
.LinkerOptions      = ' /OUT:"%2"'     // Output
                    + ' "%1"'          // Input
                    + ' /WX'           // Warnings as errors
                    + ' /NOLOGO'       // No linker spam
                    + ' /DEBUG'        // Keep debug info when linking

.BaseIncludePaths   = ' /I"..\..\include\"'
                    + ' /I"..\..\PEGTL\include\"'
.CompilerOptions    + .BaseIncludePaths

Library( 'Concurrency-Debug' )
{
  .CompilerInputPath        = '..\..\src\Zeni\'
  .CompilerInputExcludePath = '..\..\src\Zeni\Rete\'
  .CompilerOutputPath       = '$VSCMD_ARG_TGT_ARCH$\Debug\Concurrency\'
  .CompilerOptions          + .CompilerOptionsDebug
                            + ' /D"CONCURRENCY_EXPORTS"'
  .LibrarianOutput          = '$VSCMD_ARG_TGT_ARCH$\Debug\Concurrency\Concurrency.lib'
  .LibrarianOptions         + ' /OUT:"$VSCMD_ARG_TGT_ARCH$\Debug\Concurrency.dll"'
}

Library( 'Concurrency-Release' )
{
  .CompilerInputPath        = '..\..\src\Zeni\'
  .CompilerInputExcludePath = '..\..\src\Zeni\Rete\'
  .CompilerOutputPath       = '$VSCMD_ARG_TGT_ARCH$\Release\Concurrency\'
  .CompilerOptions          + .CompilerOptionsRelease
                            + ' /D"CONCURRENCY_EXPORTS"'
  .LibrarianOutput          = '$VSCMD_ARG_TGT_ARCH$\Release\Concurrency\Concurrency.lib'
  .LibrarianOptions         + ' /OUT:"$VSCMD_ARG_TGT_ARCH$\Release\Concurrency.dll"'
}

Library( 'Rete-Debug' )
{
  .CompilerInputPath         = '..\..\src\Zeni\'
  .CompilerInputExcludePath  = '..\..\src\Zeni\Concurrency\'
  .CompilerOutputPath        = '$VSCMD_ARG_TGT_ARCH$\Debug\Rete\'
  .CompilerOptions           + .CompilerOptionsDebug
                             + ' /D"RETE_EXPORTS"'
  .LibrarianAdditionalInputs = '$VSCMD_ARG_TGT_ARCH$\Debug\Concurrency\Concurrency.lib'
  .LibrarianOutput           = '$VSCMD_ARG_TGT_ARCH$\Debug\Rete\Rete.lib'
  .LibrarianOptions          + ' /OUT:"$VSCMD_ARG_TGT_ARCH$\Debug\Rete.dll"'
}

Library( 'Rete-Release' )
{
  .CompilerInputPath         = '..\..\src\Zeni\'
  .CompilerInputExcludePath  = '..\..\src\Zeni\Concurrency\'
  .CompilerOutputPath        = '$VSCMD_ARG_TGT_ARCH$\Release\Rete\'
  .CompilerOptions           + .CompilerOptionsRelease
                             + ' /D"RETE_EXPORTS"'
  .LibrarianAdditionalInputs = '$VSCMD_ARG_TGT_ARCH$\Release\Concurrency\Concurrency.lib'
  .LibrarianOutput           = '$VSCMD_ARG_TGT_ARCH$\Release\Rete\Rete.lib'
  .LibrarianOptions          + ' /OUT:"$VSCMD_ARG_TGT_ARCH$\Release\Rete.dll"'
}

ObjectList( 'Test1Objects-Debug' )
{
  .CompilerInputPath  = '..\..\Test1\'
  .CompilerOutputPath = '$VSCMD_ARG_TGT_ARCH$\Debug\Test1\'
  .CompilerOptions    + .CompilerOptionsDebug
}

ObjectList( 'Test1Objects-Release' )
{
  .CompilerInputPath  = '..\..\Test1\'
  .CompilerOutputPath = '$VSCMD_ARG_TGT_ARCH$\Release\Test1\'
  .CompilerOptions    + .CompilerOptionsRelease
}

Executable( 'Test1-Debug' )
{
  .Libraries     = { 'Concurrency-Debug', 'Rete-Debug', 'Test1Objects-Debug' }
  .LinkerOutput  = '$VSCMD_ARG_TGT_ARCH$\Debug\Test1.exe' 
  .LinkerOptions + ' /PDB:"$VSCMD_ARG_TGT_ARCH$\Debug\Test1\Test1.pdb"'
}

Executable( 'Test1-Release' )
{
  .Libraries     = { 'Concurrency-Release', 'Rete-Release', 'Test1Objects-Release' }
  .LinkerOutput  = '$VSCMD_ARG_TGT_ARCH$\Release\Test1.exe' 
  .LinkerOptions + ' /PDB:"$VSCMD_ARG_TGT_ARCH$\Release\Test1\Test1.pdb"'
}

.ProjectBuildCommand = 'call "^$(VCInstallDir)\Auxiliary\Build\vcvarsall.bat" ^$(PlatformTarget) &amp;&amp; cd "^$(SolutionDir)" &amp;&amp; "^$(SolutionDir)\FBuild.exe" -ide -cache -dist ^$(MSBuildProjectName)-^$(Configuration)'
.ProjectRebuildCommand = 'call "^$(VCInstallDir)\Auxiliary\Build\vcvarsall.bat" ^$(PlatformTarget) &amp;&amp; cd "^$(SolutionDir)" &amp;&amp; "^$(SolutionDir)\FBuild.exe" -ide -cache -dist -clean ^$(MSBuildProjectName)-^$(Configuration)'

VCXProject( 'ConcurrencyProject' )
{
  .ProjectOutput              = 'Concurrency.vcxproj'
  .ProjectIncludePaths        = '..\..\src\Zeni\'
  .ProjectIncludePathsExclude = '..\..\src\Zeni\Rete\'
  .ProjectInputPaths          = { '..\..\include\Zeni\' , '..\..\src\Zeni\' }
  .ProjectInputPathsExclude   = { '..\..\include\Zeni\Rete\', '..\..\src\Zeni\Rete\' }
}

VCXProject( 'ReteProject' )
{
  .ProjectOutput              = 'Rete.vcxproj'
  .ProjectIncludePaths        = '..\..\src\Zeni\'
  .ProjectIncludePathsExclude = '..\..\src\Zeni\Concurrency\'
  .ProjectInputPaths          = { '..\..\include\Zeni\', '..\..\src\Zeni\' }
  .ProjectInputPathsExclude   = { '..\..\include\Zeni\Concurrency\', '..\..\src\Zeni\Concurrency\' }
}

VCXProject( 'Test1Project' )
{
  .ProjectOutput       = 'Test1.vcxproj'
  .ProjectIncludePaths = '..\..\Test1\'
  .ProjectInputPaths   = '..\..\Test1\'
}

VSSolution( 'ConcReteSolution' )
{
  .SolutionOutput   = 'ConcReteFAST.sln'
  .SolutionProjects = { 'ConcurrencyProject', 'ReteProject', 'Test1Project' }
  .SolutionBuildProject = { 'Test1Project' }
}

Alias( 'ConcRete-Debug' )   { .Targets = { 'Test1-Debug' } }
Alias( 'ConcRete-Release' ) { .Targets = { 'Test1-Release' } }

Alias( 'all' )      { .Targets = { 'ConcRete-Release' } }
